package ${package.Entity};

#foreach($pkg in ${table.importPackages})
import ${pkg};
#end
import cn.afterturn.easypoi.excel.annotation.Excel;
import com.baomidou.mybatisplus.annotation.*;
import com.fasterxml.jackson.annotation.JsonFormat;
#if(${cfg.dbType}=="oracle")
import com.baomidou.mybatisplus.annotation.KeySequence;
#end
#if(${swagger2})
import io.swagger.annotations.ApiModel;
import io.swagger.annotations.ApiModelProperty;
#end
#if(${entityLombokModel})
import lombok.Data;
import lombok.EqualsAndHashCode;
import lombok.experimental.Accessors;
#end

/**
 * <p>
 * $!{table.comment}
 * </p>
 *
 * @author ${author}
 * @since ${date}
 */
#if(${entityLombokModel})
@Data
    #if(${superEntityClass})
@EqualsAndHashCode(callSuper = true)
    #else
@EqualsAndHashCode(callSuper = false)
    #end
@Accessors(chain = true)
#end
#if(${table.convert})
@TableName("${table.name}" )
#end
#if(${swagger2})
@ApiModel(value = "${entity}对象" , description = "$!{table.comment}" )
#end
#if(${cfg.dbType}=="oracle")
@KeySequence(value = "SEQ_${table.name}" , clazz = String.class)
#end
#if(${cfg.dbType}=="postgresql")
@KeySequence(value = "SEQ_${table.name}" , clazz = Integer.class)
#end
#if(${superEntityClass})
public class ${entity} extends ${superEntityClass}#if(${activeRecord})<${entity}>#end {
#elseif(${activeRecord})
public class ${entity} extends Model<${entity}> {
#else
public class ${entity} implements Serializable{
#end

#if(${entitySerialVersionUID})
private static final long serialVersionUID=1L;
#end
## ----------  BEGIN 字段循环遍历  ----------
#foreach($field in ${table.fields})

    #if(${field.keyFlag})
        #set($keyPropertyName=${field.propertyName})
    #end
    #if("$!field.comment" != "")
        #if(${swagger2})
    @ApiModelProperty(value = "${field.comment}" )
        #else
    /**
    * ${field.comment}
    */
        #end
    #end
    #if("$!field.comment" != "")
        #if(${field.propertyType.equals("LocalDateTime")})
    @Excel(name = "${field.comment}" , exportFormat = "yyyy-MM-dd HH:mm:ss" )
        #else
    @Excel(name = "${field.comment}" )
        #end
    #else
    @Excel(name = "${field.propertyName}" )
    #end
    #if(${field.keyFlag})
        ## 主键
        #if(${cfg.dbType}=="oracle"||${cfg.dbType}=="postgresql")
        @TableId(value = "${field.name}" , type = IdType.INPUT)
        #elseif(${field.keyIdentityFlag})
        @TableId(value = "${field.name}" , type = IdType.AUTO)
        #elseif(!$null.isNull(${idType}) && "$!idType" != "")
        @TableId(value = "${field.name}" , type = IdType.${idType})
        #elseif(${field.convert})
        @TableId("${field.name}" )
        #end
        ## 普通字段
    #elseif(${field.fill})
        ## -----   存在字段填充设置   -----
        #if(${field.convert})
        @TableField(value = "${field.name}" , fill = FieldFill.${field.fill})
        #else
        @TableField(fill = FieldFill.${field.fill})
        #end
    #elseif(${field.convert})
    @TableField("${field.name}" )
        ## -----   日期字段增加格式化   -----
        #if(${field.propertyType.equals("LocalDateTime")})
        @JsonFormat(pattern = "yyyy-MM-dd HH:mm:ss" , timezone = "GMT+8" )
        #end
    #end
    ## 乐观锁注解
    #if(${versionFieldName}==${field.name})
    @Version
    #end
    ## 逻辑删除注解
    #if(${logicDeleteFieldName}==${field.name})
    @TableLogic
    #end

    private ${field.propertyType} ${field.propertyName};
#end
## ----------  END 字段循环遍历  ----------

#if(!${entityLombokModel})
    #foreach($field in ${table.fields})
        #if(${field.propertyType.equals("boolean")})
            #set($getprefix="is")
        #else
            #set($getprefix="get")
        #end

    public ${field.propertyType} ${getprefix}${field.capitalName}(){
            return ${field.propertyName};
            }

        #if(${entityBuilderModel})
        public ${entity} set${field.capitalName}(${field.propertyType} ${field.propertyName}){
        #else
        public void set${field.capitalName}(${field.propertyType} ${field.propertyName}) {
        #end
            this.${field.propertyName} = ${field.propertyName};
        #if(${entityBuilderModel})
                return this;
        #end
            }
    #end
    ## --foreach end---
#end
## --end of #if(!${entityLombokModel})--

#if(${entityColumnConstant})
    #foreach($field in ${table.fields})
    public static final String ${field.name.toUpperCase()} ="${field.name}" ;

    #end
#end
#if(${activeRecord})
    @Override
    protected Serializable pkVal(){
    #if(${keyPropertyName})
        return this.${keyPropertyName};
    #else
        return null;
    #end
        }

#end
#if(!${entityLombokModel})
    @Override
    public String toString() {
        return "${entity}{" +
    #foreach($field in ${table.fields})
        #if($!{foreach.index}==0)
                "${field.propertyName}=" + ${field.propertyName} +
        #else
                ", ${field.propertyName}=" + ${field.propertyName} +
        #end
    #end
        "}";
        }
#end
}
