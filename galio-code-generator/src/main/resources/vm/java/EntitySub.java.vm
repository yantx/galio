package ${packageName}.model;

#foreach ($import in $subImportList)
import ${import};
#end
import org.apache.commons.lang3.builder.ToStringBuilder;
import org.apache.commons.lang3.builder.ToStringStyle;
import com.galio.core.model.BaseEntity;

/**
 * @Author: ${author}
 * @Date: ${datetime}
 * @Description: ${subTable.functionName}对象 ${subTableName}
 */
public class ${subClassName} extends BaseEntity
{
    private static final long serialVersionUID = 1L;

#foreach ($column in $subTable.columns)
#if(!$table.isSuperColumn($column.fieldName))
    /** $column.columnComment */
#if($column.list)
#set($parentheseIndex=$column.columnComment.indexOf("（"))
#if($parentheseIndex != -1)
#set($comment=$column.columnComment.substring(0, $parentheseIndex))
#else
#set($comment=$column.columnComment)
#end
#end
    private $column.fieldType $column.fieldName;

#end
#end
#foreach ($column in $subTable.columns)
#if(!$table.isSuperColumn($column.fieldName))
#if($column.fieldName.length() > 2 && $column.fieldName.substring(1,2).matches("[A-Z]"))
#set($AttrName=$column.fieldName)
#else
#set($AttrName=$column.fieldName.substring(0,1).toUpperCase() + ${column.fieldName.substring(1)})
#end
    public void set${AttrName}($column.fieldType $column.fieldName)
    {
        this.$column.fieldName = $column.fieldName;
    }

    public $column.fieldType get${AttrName}()
    {
        return $column.fieldName;
    }
#end
#end

    @Override
    public String toString() {
        return new ToStringBuilder(this,ToStringStyle.MULTI_LINE_STYLE)
#foreach ($column in $subTable.columns)
#if($column.fieldName.length() > 2 && $column.fieldName.substring(1,2).matches("[A-Z]"))
#set($AttrName=$column.fieldName)
#else
#set($AttrName=$column.fieldName.substring(0,1).toUpperCase() + ${column.fieldName.substring(1)})
#end
            .append("${column.fieldName}", get${AttrName}())
#end
            .toString();
    }
}
