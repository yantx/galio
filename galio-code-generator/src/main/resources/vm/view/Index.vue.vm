<template>
  <AppPage show-footer>
    <n-space vertical size="large">
      <n-card>
        <!-- 查询条件 -->
        <QueryBar
            v-model:query-items="queryItems"
            show-query
            @search="${s}table?.handleSearch"
            @reset="${s}table?.handleReset"
        >
          <template #formItems>
            <n-grid :x-gap="30" :cols="4">
                #foreach($column in $columns)
                    #if($column.query)
                        #set($dictType=$column.dictType)
                        #set($AttrName=$column.fieldName.substring(0,1).toUpperCase() + ${column.fieldName.substring(1)})
                        #set($parentheseIndex=$column.columnComment.indexOf("（"))
                        #if($parentheseIndex != -1)
                            #set($comment=$column.columnComment.substring(0, $parentheseIndex))
                        #else
                            #set($comment=$column.columnComment)
                        #end
                        #if($column.htmlType == "input" || $column.htmlType == "textarea")
                          <n-form-item-gi label="${comment}" path="${column.fieldName}">
                            <n-input
                                v-model="queryItems.${column.fieldName}"
                                placeholder="请输入${comment}"
                                clearable
                                @keypress.enter="${s}table?.handleSearch"
                            />
                          </n-form-item-gi>
                        #elseif(($column.htmlType == "select") && "" != $dictType)
                          <n-form-item-gi label="${comment}" path="${column.fieldName}">
                            <dict-select dictKey="$dictType"></dict-select>
                          </n-form-item-gi>
                        #elseif($column.htmlType == "datetime" && $column.queryType != "BETWEEN")
                          <n-form-item-gi label="${comment}" path="${column.fieldName}">
                            <n-date-picker clearable
                                           v-model="queryItems.${column.fieldName}"
                                           type="datetime"
                                           value-format="yyyy-MM-dd HH:mm:ss"
                                           placeholder="请选择${comment}">
                            </n-date-picker>
                          </n-form-item-gi>
                        #elseif($column.htmlType == "datetime" && $column.queryType == "BETWEEN")
                          <n-form-item-gi label="${comment}" style="width: 308px">
                            <el-date-picker
                                v-model="daterange${AttrName}"
                                value-format="yyyy-MM-dd HH:mm:ss"
                                type="datetimerange"
                            ></el-date-picker>
                          </n-form-item-gi>
                        #end
                    #end
                #end
            </n-grid>
          </template>
        </QueryBar>
      </n-card>
      <n-card>
        <!-- 操作按钮 -->
        <n-flex mb-10>
          <n-button v-permission="'${moduleName}:${businessName}:export'" type="primary" size="small" secondary
                    @click="${s}table?.handleExport()">
            <TheIcon icon="mdi:download" :size="12" class="mr-5"/>
            导出
          </n-button>
          <n-button v-permission="'${moduleName}:${businessName}:add'" type="primary" size="small" @click="handleAdd">
            <TheIcon icon="material-symbols:add" :size="12" class="mr-5"/>
            新增
          </n-button>
          <n-button v-permission="'${moduleName}:${businessName}:delete'" type="danger" size="small"
                    @click="handleDeletes(rowKeysRef)">
            <TheIcon icon="material-symbols:delete" :size="12" class="mr-5"/>
            删除
          </n-button>
        </n-flex>
        <!-- 数据表格 -->
        <CrudTable
            ref="${s}table"
            v-model:query-items="queryItems"
            :extra-params="extraParams"
            :scroll-x="1200"
            :columns="columns"
            :rowKey="${pkColumn.fieldName}"
            :get-data="api.${businessName}Page"
            @on-checked="onChecked"
            @on-data-change="(data) => (tableData = data)"
        ></CrudTable>
        <!-- 新增/编辑/查看窗口 -->
        <CrudModal
            v-model:visible="modalVisible"
            :title="modalTitle"
            :loading="modalLoading"
            :show-footer="modalAction !== 'view'"
            @on-save="handleSave"
        >
          <n-form
              ref="modalFormRef"
              label-placement="left"
              label-align="left"
              :label-width="80"
              :model="modalForm"
              :disabled="modalAction === 'view'"
          >
              #foreach($column in $columns)
                  #set($field=$column.fieldName)
                  #if($column.insert && !$column.pk)
                      #set($parentheseIndex=$column.columnComment.indexOf("（"))
                      #if($parentheseIndex != -1)
                          #set($comment=$column.columnComment.substring(0, $parentheseIndex))
                      #else
                          #set($comment=$column.columnComment)
                      #end
                      #set($dictType=$column.dictType)
                      #if($column.htmlType == "input")
                        <n-form-item label="${comment}" prop="${field}">
                          <n-input v-model="modalForm.${field}" placeholder="请输入${comment}"/>
                        </n-form-item>
                      #elseif($column.htmlType == "imageUpload")
                        <n-form-item label="${comment}" prop="${field}">
                          <image-upload v-model="modalForm.${field}"/>
                        </n-form-item>
                      #elseif($column.htmlType == "fileUpload")
                        <n-form-item label="${comment}" prop="${field}">
                          <file-upload v-model="modalForm.${field}"/>
                        </n-form-item>
                      #elseif($column.htmlType == "editor")
                        <n-form-item label="${comment}">
                          <editor v-model="modalForm.${field}" :min-height="192"/>
                        </n-form-item>
                      #elseif($column.htmlType == "select" && "" != $dictType)
                        <n-form-item label="${comment}" prop="${field}">
                          <dict-select dictKey="$dictType" v-model:value="modalForm.${field}"></dict-select>
                        </n-form-item>
                      #elseif($column.htmlType == "select" && $dictType)
                        <n-form-item label="${comment}" prop="${field}">
                          <n-select v-model:value="modalForm.${field}" :options="options" />
                        </n-form-item>
                      #elseif($column.htmlType == "checkbox" && "" != $dictType)
                        <n-form-item label="${comment}" prop="${field}">
                          <dict-checkbox-group dictKey="$dictType" v-model:value="modalForm.${field}"></dict-checkbox-group>
                        </n-form-item>
                      #elseif($column.htmlType == "checkbox" && $dictType)
                        <n-form-item label="${comment}" prop="${field}">
                          <n-checkbox-group v-model:value="modalForm.${field}">
                            <n-space item-style="display: flex;">
                              <n-checkbox value="0" label="请选择" />
                            </n-space>
                          </n-checkbox-group>
                        </n-form-item>
                      #elseif($column.htmlType == "radio" && "" != $dictType)
                        <n-form-item label="${comment}" prop="${field}">
                          <dict-radio-group dictKey="$dictType" v-model:value="modalForm.${field}"></dict-radio-group>
                        </n-form-item>
                      #elseif($column.htmlType == "radio" && $dictType)
                        <n-form-item label="${comment}" prop="${field}">
                          <n-radio-group v-model:value="modalForm.${field}">
                            <n-radio label="1">请选择字典生成</n-radio>
                          </n-radio-group>
                        </n-form-item>
                      #elseif($column.htmlType == "datetime")
                        <n-form-item label="${comment}" prop="${field}">
                          <n-date-picker clearable
                                          v-model:value="modalForm.${field}"
                                          type="datetime"
                                          value-format="yyyy-MM-dd HH:mm:ss"
                                          placeholder="请选择${comment}">
                          </n-date-picker>
                        </n-form-item>
                      #elseif($column.htmlType == "textarea")
                        <n-form-item label="${comment}" prop="${field}">
                          <n-input v-model:value="modalForm.${field}" type="textarea" placeholder="请输入内容"/>
                        </n-form-item>
                      #end
                  #end
              #end
          </n-form>
        </CrudModal>
      </n-card>
    </n-space>
  </AppPage>
</template>

<script setup>
  import {NButton, NSwitch, NTag,NImage} from 'naive-ui'
  import {formatDateTime, renderIcon, isNullOrUndef} from '@/utils'
  import {useCRUD} from '@/composables'
  import api from '../../api/${businessName}'
  import {onMounted} from 'vue'
  import { hasBtnPermission } from '@/utils/auth'

  defineOptions({name: '${BusinessName}Index'})

  const ${s}table = ref(null)
  /** 表格数据，触发搜索的时候会更新这个值 */
  const tableData = ref([])
  /** QueryBar筛选参数（可选） */
  const queryItems = ref({})
  /** 补充参数（可选） */
  const extraParams = ref({})
  /** 表格选中行keys */
  const rowKeysRef = ref([])

  onMounted(() => {
          ${s}table.value?.handleSearch()
  })
  const sortStatesRef = ref([])
  const sortKeyMapOrderRef = computed(() =>
      sortStatesRef.value.reduce((result, {columnKey, order}) => {
        result[columnKey] = order
        return result
      }, {}),
  )
  const columns = [
      { type: 'selection', fixed: 'left' },
      #foreach($column in $columns)
          #set($fieldName=$column.fieldName)
          #set($parentheseIndex=$column.columnComment.indexOf("（"))
          #if($parentheseIndex != -1)
              #set($comment=$column.columnComment.substring(0, $parentheseIndex))
          #else
              #set($comment=$column.columnComment)
          #end
          #if($column.pk)
            {
              title: '${comment}',
              key: '${fieldName}',
              width: 60,
              align: 'center',
              fixed: 'left',
              sortOrder: sortKeyMapOrderRef.value.${fieldName} || false,
              sorter(rowA, rowB) {
                return rowA.${fieldName} - rowB.${fieldName}
              },
            },
          #elseif($column.list && $column.htmlType == "datetime")
            {
              title: '${comment}',
              key: '${fieldName}',
              width: 150,
              render(row) {
                return h('span', formatDateTime(row['${fieldName}']))
              },
            },
          #elseif($column.list && $column.htmlType == "imageUpload")
            {
              title: '${comment}',
              key: '${fieldName}',
              width: 80,
              align: 'center',
              fixed: 'right',
              hideInExcel: true,
              render(row) {
                h(NImage, {
                  width: 50,
                  height: 50,
                  src: "'" + row['${fieldName}'] + "'",
                })
              },
            },
          #elseif($column.list && $column.dictType && "" != $column.dictType)
            {
              title: '${comment}',
              key: '${fieldName}',
              width: 80,
              align: 'center',
              fixed: 'right',
              hideInExcel: true,
              render(row) {
                h('dict-tag', {
                  dictKey: '${column.dictType}',
                  dictItemValue: $column.htmlType == "checkbox" ? (row.${fieldName} ? row.${fieldName}.split(',') : []) : row.${fieldName}
                })
              },
            },
          #elseif($column.list && "" != $fieldName)
            { title: '${comment}', key: '${fieldName}', width: 150, ellipsis: { tooltip: true } },
          #end
      #end
    {
      title: '操作',
      width: 240,
      align: 'center',
      fixed: 'right',
      hideInExcel: true,
      render(row) {
        return [
          hasBtnPermission('${moduleName}:${businessName}:view')
              ? h(
                  NButton,
                  {
                    size: 'small',
                    type: 'primary',
                    secondary: true,
                    onClick: () => handleView(row),
                  },
                  { default: () => '查看', icon: renderIcon('majesticons:eye-line', { size: 14 }) },
              )
              : null,
          hasBtnPermission('${moduleName}:${businessName}:edit')
              ? h(
                  NButton,
                  {
                    size: 'small',
                    type: 'primary',
                    style: 'margin-left: 15px;',
                    onClick: () => handleEdit(row),
                  },
                  { default: () => '编辑', icon: renderIcon('material-symbols:edit-outline', { size: 14 }) },
              )
              : null,
          hasBtnPermission('${moduleName}:${businessName}:delete')
              ? h(
                  NButton,
                  {
                    size: 'small',
                    type: 'error',
                    style: 'margin-left: 15px;',
                    onClick: () => handleDelete(row.id),
                  },
                  {
                    default: () => '删除',
                    icon: renderIcon('material-symbols:delete-outline', { size: 14 }),
                  },
              )
              : null,
        ]
      },
    }
  ]

  // 选中事件
  function onChecked(rowKeys) {
    rowKeysRef.value = rowKeys
    if (rowKeys.length) ${s}message.info(`选中${s}{rowKeys.join(' ')}`)
  }

  const {
    modalVisible,
    modalAction,
    modalTitle,
    modalLoading,
    handleAdd,
    handleDelete,
    handleDeletes,
    handleEdit,
    handleView,
    handleSave,
    modalForm,
    modalFormRef,
  } = useCRUD({
    name: '${functionName}',
    initForm: {author: ${author}},
    doCreate: api.${businessName}Add,
    doDelete: api.${businessName}Del,
    doDeletes: api.${businessName}Dels,
    doUpdate: api.${businessName}Update,
    refresh: () => ${s}table.value?.handleSearch(),
  })
</script>
